
define(['../libs/knockout/knockout.min','jquery','./DomHandler','./Marker'],function(ko,jq,dh,mk){'use strict';function AppViewModel(locations){let self=this;let mapHandler=new MapHandler();mapHandler.markers=[];let errorLocation=false;let getBounds=function(){let bounds;let sw,ne;let location;let l;l=self.locations.length;self.locations.sort(function(a,b){return(a.lat-b.lat);}).sort(function(a,b){return(a.lng-b.lng);});location=self.locations[0];sw={lat:location.lat,lng:location.lng};location=self.locations[l-1];ne={lat:location.lat,lng:location.lng};bounds=new google.maps.LatLngBounds(sw,ne);return bounds;};let focusOnInput=function(){self.domHandler.focusOnInput();};let getObjects=function(obj,key){var objects=[];for(var i in obj){if(!obj.hasOwnProperty(i))continue;if(typeof obj[i]==='object'){objects=objects.concat(getObjects(obj[i],key));}else if(i===key){objects.push(obj);}}
return objects;};let retrieveLocationDesc=function(title,marker,self_){let str=['https://en.wikipedia.org/w/api.php?action=query&prop=extracts&titles=',title,'&format=json&exintro=1'].join('');let extract;jq.ajax({url:str,dataType:'jsonp',crossDomain:true,type:'POST',headers:{'Api-User-Agent':'Example/1.0'}}).done((data)=>{extract=getObjects(data,'extract')[0].extract.substring(0,240);extract+='...<hr><em><a href="https://en.wikipedia.org/wiki/'+
title+'" target="_blank">See more on Wikipedia</a></em>';marker.infoWindow=new google.maps.InfoWindow({content:extract});}).fail((error)=>{if(!self_.errorLocation){self_.errorLocation=true;alert('Some data couldn\'t be retrieved. Maybe refresh the page or try later ?');}});};let initializeViewModel=function(self_){let center_={lat:self_.locations[0].lat,lng:self_.locations[0].lng};mapHandler.initMap(center_,getBounds());let infowindow;let gMarker,marker;self_.locations.forEach((val,i,t)=>{gMarker=new google.maps.Marker({position:{lat:val.lat,lng:val.lng},map:self_.mapHandler.map,title:val.name,animation:null});marker=new mk(gMarker,infowindow);retrieveLocationDesc(val.name,marker,self_);self_.mapHandler.markers.push(marker);marker.addListenerOnMarker('click',self_.mapHandler.handleClickMarker.bind(self_.mapHandler,marker));});self_.locations.sort(function(a,b){let nameA=a.name.toLowerCase(),nameB=b.name.toLowerCase();if(nameA<nameB){return-1;}
if(nameA>nameB){return 1;}
return 0;});self_.mapHandler.markers.sort(function(a,b){let nameA=a.marker.title.toLowerCase(),nameB=b.marker.title.toLowerCase();if(nameA<nameB){return-1;}
if(nameA>nameB){return 1;}
return 0;});};self.__defineGetter__('mapHandler',function(){return mapHandler;});self.domHandler=new dh();self.searchTerms=ko.observable('');self.locations=locations;self.locations.forEach((val,i,t)=>{val.visible=ko.observable(true);});self.listLocations=ko.observableArray(self.locations);self.handleClickOnLocation=function(data,event){let t=self.mapHandler.markers;for(let i=0,l=t.length;i<l;i++){if(t[i].marker.title===data.name){self.mapHandler.toggleInfo(t[i]);self.mapHandler.toggleBounce(t[i].marker);}else{self.mapHandler.toggleInfo(t[i],true);}}
focusOnInput();};initializeViewModel(self);}
AppViewModel.prototype.locationContainsString=function(location,string){let len=string.length;let res=false;if(location.name.length>=len){res=(location.name.toLowerCase().indexOf(string.toLowerCase())>-1);}else{res=false;}
return res;};AppViewModel.prototype.filterLocations=function(data,event){this.locations.forEach((location,index,array)=>{if(this.locationContainsString(location,this.searchTerms())){location.visible(true);this.showMarker(index);}else{location.visible(false);this.hideMarker(index);}});};AppViewModel.prototype.showMarker=function(index){this.mapHandler.showMarker(index);};AppViewModel.prototype.hideMarker=function(index){this.mapHandler.hideMarker(index);};function MapHandler(){let self=this;let map;this.__defineGetter__('map',function(){return map;});this.__defineSetter__('map',function(map_){map=map_;});self.markers=[];}
MapHandler.prototype.initMap=function(center_,bounds){this.map=new google.maps.Map(document.getElementById('map'),{scrollwheel:true,zoom:2,rotateControl:true,streetViewControl:false,zoomControl:true});this.map.fitBounds(bounds);};MapHandler.prototype.toggleBounce=function(gMarker){if(gMarker.getAnimation()!==null){gMarker.setAnimation(null);}else{gMarker.setAnimation(google.maps.Animation.BOUNCE);setTimeout(()=>{this.toggleBounce(gMarker);},1500);}};MapHandler.prototype.handleClickMarker=function(marker){this.toggleInfo(marker);if(this.isInfoWindowOpened(marker.infoWindow)){this.toggleBounce(marker.marker);this.markers.forEach((val,i,t)=>{if(val!==marker){this.toggleInfo(val,true);}});}};MapHandler.prototype.toggleInfo=function(marker,closeIt){let shouldClose=(closeIt!==undefined&&closeIt!==null)?closeIt:this.isInfoWindowOpened(marker.infoWindow);if(shouldClose){marker.infoWindow.close();}else{marker.infoWindow.open(this.map,marker.marker);}};MapHandler.prototype.isInfoWindowOpened=function(infoWindow){return(infoWindow.map!==null&&infoWindow.map!==undefined);};MapHandler.prototype.showMarker=function(index){this.markers[index].marker.setMap(this.map);};MapHandler.prototype.hideMarker=function(index){this.markers[index].marker.setMap(null);};return AppViewModel;});